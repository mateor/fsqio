<%
  // Copyright 2013 Foursquare Labs Inc. All Rights Reserved.

  import io.fsq.spindle.codegen.runtime.ScalaField
%>
<%@ val field: ScalaField %>
#if (field.isForeignKey && field.renderType.isInstanceOf[io.fsq.spindle.codegen.runtime.Container1RenderType])
<% val elem = field.renderType.asInstanceOf[io.fsq.spindle.codegen.runtime.Container1RenderType].elem %>
  override final def ${field.name}Fks[R <: _root_.io.fsq.spindle.runtime.Record[R] with _root_.io.fsq.spindle.runtime.HasPrimaryKey[${elem.text}, R]](meta: _root_.io.fsq.spindle.runtime.MetaRecord[R, _]): Seq[R] = throw new NotImplementedError("TODO(dan)")
  override final def ${field.name}UntypedFks(meta: _root_.io.fsq.spindle.runtime.UntypedMetaRecord): Seq[_root_.io.fsq.spindle.runtime.UntypedRecord with _root_.io.fsq.spindle.runtime.SemitypedHasPrimaryKey[${elem.text}]] = throw new NotImplementedError("TODO(dan)")
  override final def ${field.name}GetObj: Seq[_root_.io.fsq.spindle.runtime.SemitypedHasPrimaryKey[${elem.text}]] = throw new NotImplementedError("TODO(dan)")
  override final def ${field.name}SetObj(x: Seq[_root_.io.fsq.spindle.runtime.SemitypedHasPrimaryKey[${elem.text}]]): Unit = throw new UnsupportedOperationException("This is a read only adapter")
  override final def ${field.name}AlternateFks: Seq[AnyRef] = underlyingLift.primedObjSeqFromWireName("${field.wireName}")
  override final def ${field.name}SetAlternateObj(x: Seq[AnyRef]): Unit = throw new UnsupportedOperationException("This is a read only adapter")
#end
