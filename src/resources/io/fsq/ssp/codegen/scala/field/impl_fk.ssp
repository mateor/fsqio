<%
  // Copyright 2013 Foursquare Labs Inc. All Rights Reserved.

  import io.fsq.spindle.codegen.runtime.ScalaField
%>
<%@ val field: ScalaField %>
  private var ${field.varName}Obj: AnyRef = null
  private var ${field.varName}AlternateObj: AnyRef = null
  override def ${field.name}Fk[R <: io.fsq.spindle.Record[R] with io.fsq.spindle.HasPrimaryKey[${field.renderType.text}, R]](meta: io.fsq.spindle.MetaRecord[R, _]): Option[R] = {
    if (${field.isSetName}) {
      if (${field.varName}Obj != null) {
        val foreignOpt = meta.ifInstanceFrom(${field.varName}Obj)
        if (foreignOpt.isDefined) {
          val foreignObj = foreignOpt.get
          if (foreignObj.primaryKey == ${field.name}OrThrow) {
            foreignOpt
          } else {
            io.fsq.spindle.RuntimeHelpers.fkHooks.mismatchedPrimaryKey(this, this.meta.${field.escapedName}, meta, ${field.name}OrThrow, foreignObj)
          }
        } else {
          io.fsq.spindle.RuntimeHelpers.fkHooks.mismatchedInstanceType(this, this.meta.${field.escapedName}, meta, ${field.name}OrThrow, ${field.varName}Obj)
        }
      } else {
        io.fsq.spindle.RuntimeHelpers.fkHooks.missingObj(this, this.meta.${field.escapedName}, meta, ${field.name}OrThrow)
      }
    } else {
      io.fsq.spindle.RuntimeHelpers.fkHooks.missingKey(this, this.meta.${field.escapedName}, meta)
    }
  }
  override def ${field.name}UntypedFk(meta: io.fsq.spindle.UntypedMetaRecord): Option[io.fsq.spindle.UntypedRecord with io.fsq.spindle.SemitypedHasPrimaryKey[${field.renderType.text}]] = {
    val foreignOpt = meta.untypedIfInstanceFrom(${field.varName}Obj).asInstanceOf[Option[io.fsq.spindle.UntypedRecord with io.fsq.spindle.SemitypedHasPrimaryKey[${field.renderType.text}]]]
    if (${field.isSetName} && foreignOpt.isDefined && foreignOpt.get.primaryKey == ${field.name}OrThrow) {
      foreignOpt
    } else {
      ${field.varName}Obj = null
      None
    }
  }
  override def ${field.name}GetObj: Option[io.fsq.spindle.SemitypedHasPrimaryKey[${field.renderType.text}]] = {
    if (${field.varName}Obj != null) {
      Some(${field.varName}Obj.asInstanceOf[io.fsq.spindle.SemitypedHasPrimaryKey[${field.renderType.text}]])
    } else {
      None
    }
  }
  override def ${field.name}SetObj(x: io.fsq.spindle.SemitypedHasPrimaryKey[${field.renderType.text}]): Unit = {
    ${field.varName}Obj = x
  }
  override def ${field.name}AlternateFk: Option[AnyRef] = {
    if (${field.isSetName} && ${field.varName}AlternateObj != null) {
      Some(${field.varName}AlternateObj)
    } else {
      io.fsq.spindle.RuntimeHelpers.fkHooks.missingAlternateObj(this, this.meta.${field.escapedName}, ${field.name}Option)
    }
  }
  override def ${field.name}SetAlternateObj(x: AnyRef): Unit = {
    ${field.varName}AlternateObj = x
  }
