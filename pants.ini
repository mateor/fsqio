# Pants config for Foursquare Fsq.io

[GLOBAL]
print_exception_stacktrace: True

# The pants_version value is only used in Fsq.io, although checked on each run everywhere.
pants_version: 1.0.1+fsq20160621155826

verify_config: True
kill_nailguns: True

pythonpath: [
    "%(buildroot)s/contrib/buildgen/src/python",
  ]

backend_packages: [
    'fsqio.pants',
  ]

# Mixed into all cache keys. Bump this to invalidate all existing artifacts.
# We are using timestamps for cache keys. To bump it run `date +%Y-%m-%d:%H:%M:%S` and paste in the output.
cache_key_gen_version: '2016-04-19:16:38:41'

# The build_ignore_patterns uses .gitignore syntax.
ignore_patterns: [
    '.*/',
    '/.pants.d',
    '.git',
    '*.orig',
    '*.rej',
    '.gitshed',
    '.local_artifact_cache',
    '.pants.bootstrap',
    '.pants.d',
    '.pantsenv',
    '.pids',
    '.pvenvs',
    '.wheelhouse',
    '/api',
    '/dependencies',
    '/dist',
    '/etc',
    '/log',
    '/mongo-testdb',
    '/out',
    '/scripts',
    '/target',
    '/yourkit',
  ]


[DEFAULT]
pants_workdir: %(buildroot)s/.pants.d
pants_supportdir: %(buildroot)s/build-support
pants_distdir: %(buildroot)s/dist


basic_opts: [
  '-Duser.timezone=UTC',
  '-Dfile.encoding=UTF-8',
  '-Djava.awt.headless=true',
  '-XX:+AggressiveOpts',
  '-XX:+UseCompressedOops',
  '-Xss4096k',
  '-server',
  '-Dscalac.patmat.analysisBudget=off',
  '-Dzinc.analysis.cache.limit=1000',
  '-Xmx8g',
  ]

fsqio_test_opts: [
  '-Duser.timezone=UTC',
  '-Dfile.encoding=UTF-8',
  '-Djava.awt.headless=true',
  '-XX:+AggressiveOpts',
  '-XX:+UseCompressedOops',
  '-XX:ReservedCodeCacheSize=512m',
  '-Xss4096k',
  '-noverify',
  '-server',
  '-Dscalac.patmat.analysisBudget=off',
  '-Dzinc.analysis.cache.limit=1000',
  '-Drun.mode=test',
  '-Dmongo.connectionsPerHost=4',
  '-Dmongo.threadsAllowedToBlockForConnectionMultiplier=10',
  '-Dmongo.connectionsPerHost=10',
  '-Dmongo.threadsAllowedToBlockForConnectionMultiplier=10',
  '-Djava.security.manager',
  '-Djava.security.policy=tests.policy',
  '-Xmx6g',
  ]

debug_opts: [
  '-Xverify:none',
  '-Xdebug',
  '-Xnoagent',
  '-Djava.compiler=NONE',
  '-Xrunjdwp:transport=dt_socket,address=4000,server=y,suspend=y',
  ]

local_artifact_cache_path: %(buildroot)s/.local_artifact_cache/

local_artifact_caches: ["%(local_artifact_cache_path)s"]
all_artifact_caches: [
    "%(local_artifact_cache_path)s",
  ]


# Override these in each section, as appropriate, using the values above.
[cache]
read_from: []
write_to: []


[reporting]
# This cuts down on the verbosity of pants output
# Comment out these lines to see warnings and other output
console_label_format: {
    'COMPILER' : 'SUPPRESS',
  }
console_tool_output_format: {
    'COMPILER' : 'SUPPRESS',
  }


[jvm-distributions]
minimum_version: 1.8.0
maximum_version: 1.8.999


[jvm-platform]
default_platform: java8
platforms: {
    'java8': {'source': '8', 'target': '8', 'args': [] },
  }

[bundle.jvm]
use_basename_prefix: True


[cache.bootstrap.bootstrap-jvm-tools]
read_from = %(all_artifact_caches)s
write_to = %(local_artifact_caches)s


[binaries]
# Use upstream pants bintray for opensource repos.
baseurls: [
    'https://dl.bintray.com/pantsbuild/maven/',
  ]


[goals]
logdir: /tmp/%(user)s/goals


[ivy]
ivy_settings: %(pants_supportdir)s/ivy/opensource_ivysettings.xml
cache_dir: %(homedir)s/.ivy2/cache
# We need a custom ivy profile to grab the optional pgp libs for
# signing artifacts we publish to Sonatype.
ivy_profile: %(pants_supportdir)s/ivy/ivy.xml


[thrift-binary]
supportdir: thrift
version: 0.9.1


[gen.spindle]
thrift_include: ['%(buildroot)s/src/thrift', '%(buildroot)s/test/thrift']
scala_ssp_template: src/resources/io/fsq/ssp/codegen/scala
java_ssp_template: src/resources/io/fsq/ssp/codegen/javagen
spindle_codegen_binary: src/jvm/io/fsq/spindle/codegen/binary:spindle
runtime_dependency: [
    '3rdparty:thrift',
    '3rdparty:finagle',
    '3rdparty:mongodb',
    '3rdparty:joda-time',
    'src/jvm/io/fsq/spindle/common/thrift/base',
    'src/jvm/io/fsq/spindle/common/thrift/bson',
    'src/jvm/io/fsq/spindle/common/thrift/json',
    'src/jvm/io/fsq/spindle/runtime',
  ]


[cache.gen.spindle]
read_from = %(all_artifact_caches)s
write_to = %(local_artifact_caches)s


[build-spindle]
spindle_codegen_binary: src/jvm/io/fsq/spindle/codegen/binary:spindle


[cache.build-spindle]
write_to: %(local_artifact_caches)s
read_from: %(all_artifact_caches)s


[compile.zinc]
# If you are changing any compile options for zinc or java you MUST bump the cache key!
worker_count: 4
name_hashing: False
#TODO DENORM:
jvm_options: [
    '-Duser.timezone=UTC',
    '-Dfile.encoding=UTF-8',
    '-Djava.awt.headless=true',
    '-XX:+AggressiveOpts',
    '-XX:+UseCompressedOops',
    '-Xss4096k',
    '-server',
    '-Dscalac.patmat.analysisBudget=off',
    '-Dzinc.analysis.cache.limit=1000',
    '-XX:+UseG1GC',
    '-XX:+PrintGCDetails',
    '-XX:+PrintGCTimeStamps',
    '-Xmx8g',
  ]

warning_args: []
no_warning_args: [
    '-S-nowarn',
  ]

# TODO: Write to caches (or at least local cache) once editing-while-building doesn't cause issues.
args: [
    '-S-encoding', '-SUTF-8',
    '-S-deprecation',
    '-S-unchecked',
    '-S-feature',
    '-S-Xfatal-warnings',
    '-S-g:vars',
    '-S-language:existentials',
    '-S-language:implicitConversions',
    '-S-language:reflectiveCalls',
    '-S-language:postfixOps',
    '-S-language:higherKinds',
  ]


[cache.compile.zinc]
read_from = %(all_artifact_caches)s
write_to = []


[jvm]
debug_args: %(debug_opts)s


[jvm.repl.scala]
options: [
    '-Duser.timezone=UTC',
    '-Dfile.encoding=UTF-8',
    '-Djava.awt.headless=true',
    '-XX:+AggressiveOpts',
    '-XX:+UseCompressedOops',
    '-Xss4096k',
    '-server',
    '-Dscalac.patmat.analysisBudget=off',
    '-Dmongo.connectionsPerHost=4',
    '-Dmongo.threadsAllowedToBlockForConnectionMultiplier=10',
    '-noverify',
    '-XX:ReservedCodeCacheSize=512m',
    '-Dscala.usejavacp=true',
    '-DconsoleMode=true',
    '-Xmx6g',
  ]



[jvm.run.jvm]
options: %(basic_opts)s


[jvm.test.junit]
options: %(fsqio_test_opts)s


[jar-tool]
jvm_options: ['-Xms2g','-Xmx2g', '-Djava.io.tmpdir=%(pants_workdir)s']


[pom-publish]
ivy_settings: %(pants_supportdir)s/ivy/ivysettings.publish.xml


[publish.jar]
jvm_options: []
# This is a dummy repo and is unused by Foursquare.
repos = {
    'oss_sonatype': {
      'resolver': 'oss.sonatype.org-publish',
      'confs': ['default', 'sources'],
      'auth': 'build-support:oss.sonatype.org'
    }
  }


[scala-platform]
version: 2.10


[buildgen]
source_dirs: [
  'src',
  '3rdparty',
  ]

test_dirs: [
  'test',
  ]

target_whitelist: [
      'java_tests',
      'junit_tests',
      'python_library',
      'python_tests',
      'scala_library',
      'scala_record_library',
      'scalac_plugin',
      'spindle_thrift_library'
  ]

managed_dependency_aliases: [
      'jar_library',
      'python_library',
      'python_requirement_library',
      'scala_library',
      'scala_record_library',
  ]

buildgen_target_bags: [
  'src/thrift/io/fsq:all_thrift',
  ]


[buildgen.python]
fatal: True

first_party_packages = [
  'fsqio',
  ]

ignored_prefixes: [
  'geojson',     # twofishes script in src/jvm.
  'lvm',         # linuxonly
  'pants',
  'shapely',     # twofishes script - requires c headers and not in virtualenv
  ]

third_party_map: {
  'gen': {
    'apache': {
      'aurora': '3rdparty/python:apache.aurora.thrift',
      'thermos': '3rdparty/python:apache.aurora.thermos',
      },
    'twitter': {
       'thrift': '3rdparty/python:twitter.common.zookeeper',
      },
    }
  }

[tag]
# NOTE: This is overrided internally - for use with Fsq.io only.
by_prefix:  {
    '3rdparty': ['exempt'],
    'test': ['tests'],
    'verification': ['tests'],
    'src': ['dependencies_cannot_have:tests'],
    'src/jvm/io/fsq': ['opensource', 'dependencies_must_have:opensource', 'fscommon'],
    'src/resources/io/fsq': ['opensource', 'dependencies_must_have:opensource'],
    'src/thrift/io/fsq': ['opensource', 'dependencies_must_have:opensource', 'fscommon'],
    'test/jvm/io/fsq': ['opensource', 'dependencies_must_have:opensource'],
    'test/thrift/io/fsq': ['opensource', 'dependencies_must_have:opensource'],
  }


[pom-resolve]
# NOTE: This is overrided internally - for use with Fsq.io only.
maven_repos: [
    {'geotools':'http://download.osgeo.org/webdav/geotools'},
    {'maven': 'https://repo.maven.apache.org/maven2'},
    {'twitter': 'https://maven.twttr.com'},
    {'jnegre': 'https://bintray.com/artifact/download/jnegre/maven'},
    {'con-jars': 'http://conjars.org/repo'},
    {'clojars': 'http://clojars.org/repo'},
  ]

global_exclusions = [
    {'org': 'commons-logging', 'name': 'commons-logging'},
    {'org': 'org.slf4j', 'name': 'slf4j-log4j12'},
    {'org': 'org.slf4j', 'name': 'slf4j-jdk14'},
    {'org': 'log4j', 'name': 'log4j'},

    # we want only the version of jetty that we explicitly include.
    {'org': 'org.mortbay.jetty', 'name': 'jetty'},
    {'org': 'org.mortbay.jetty', 'name': 'jetty-util'},

    # NOTE: if you need jruby then make sure to exclude it from the hbase jar.
    # The issue that caused this exclude was an out-of-date version of jodatime bundled
    # within jruby, manifesting as a compile error.
    {'org': 'org.jruby', 'name': 'jruby-complete'},

    # Exclude old Netty versions with different groupId/artifactId's.
    {'org': 'org.jboss.netty', 'name': 'netty'},

    # NOTE: A transitive dependency of scalding-{core,commons} pulls in
    # org.ow2.asm/asm-4.0, which has a different organization than the 3.x
    # asm versions and thus gets pulled in alongside asm-3.x.
    # This causes an order-dependent classpath conflict which in turn
    # interferes with reflection in hadoop classloading tests.
    {'org': 'org.ow2.asm', 'name': 'asm'},
    {'org': 'org.ow2.asm', 'name': 'asm-analysis'},
    {'org': 'org.ow2.asm', 'name': 'asm-tree'},
    {'org': 'org.ow2.asm', 'name': 'asm-util'},

    # Lots of things depend on these, but they are MR1 so we should avoid them.
    # They should be subsumed by the replacements in hadoop-common
    # and hadoop-mapreduce-client-core
    {'org': 'org.apache.hadoop', 'name': 'hadoop-core'},

  ]

global_pinned_versions = [
    {'org': 'asm', 'name': 'asm', 'rev': '3.3.1'},
    {'org': 'asm', 'name': 'asm-commons', 'rev': '3.3.1'},
    {'org': 'asm', 'name': 'asm-tree', 'rev': '3.3.1'},
    {'org': 'asm', 'name': 'asm-util', 'rev': '3.3.1'},
    {'org': 'com.fasterxml.jackson.core', 'name': 'jackson-annotations', 'rev': '2.4.2'},
    {'org': 'com.fasterxml.jackson.core', 'name': 'jackson-core', 'rev': '2.4.2'},
    {'org': 'com.fasterxml.jackson.core', 'name': 'jackson-databind', 'rev': '2.4.2'},
    {'org': 'com.google.code.findbugs', 'name': 'jsr305', 'rev': '2.0.3'},
    {'org': 'com.google.code.gson', 'name': 'gson', 'rev': '2.2.2'},
    {'org': 'com.googlecode.javaewah', 'name': 'JavaEWAH', 'rev': '0.6.6'},
    {'org': 'com.hadoop.gplcompression', 'name': 'hadoop-lzo', 'rev': '0.4.19'},
    {'org': 'com.sun.jersey', 'name': 'jersey-core', 'rev': '1.9'},
    {'org': 'com.sun.jersey', 'name': 'jersey-server', 'rev': '1.9'},
    {'org': 'com.sun.xml.bind', 'name': 'jaxb-impl', 'rev': '2.2.3-1'},
    {'org': 'com.thoughtworks.paranamer', 'name': 'paranamer', 'rev': '2.6'},
    {'org': 'com.twitter', 'name': 'chill_2.10', 'rev': '0.5.2'},
    {'org': 'com.twitter', 'name': 'chill-java', 'rev': '0.5.2'},
    {'org': 'com.twitter', 'name': 'util-core_2.10', 'rev': '6.24.0'},
    {'org': 'com.twitter', 'name': 'util-jvm_2.10', 'rev': '6.24.0'},
    {'org': 'com.twitter', 'name': 'util-logging_2.10', 'rev': '6.24.0'},
    {'org': 'com.twitter.common', 'name': 'application-action', 'rev': '0.0.66'},
    {'org': 'com.twitter.common', 'name': 'args', 'rev': '0.2.6'},
    {'org': 'com.twitter.common', 'name': 'args-apt', 'rev': '0.1.6'},
    {'org': 'com.twitter.common', 'name': 'args-core', 'rev': '0.1.7'},
    {'org': 'com.twitter.common', 'name': 'base', 'rev': '0.0.82'},
    {'org': 'com.twitter.common', 'name': 'collections', 'rev': '0.0.69'},
    {'org': 'com.twitter.common', 'name': 'dynamic-host-set', 'rev': '0.0.41'},
    {'org': 'com.twitter.common', 'name': 'io', 'rev': '0.0.51'},
    {'org': 'com.twitter.common', 'name': 'io-json', 'rev': '0.0.39'},
    {'org': 'com.twitter.common', 'name': 'io-thrift', 'rev': '0.0.48'},
    {'org': 'com.twitter.common', 'name': 'net-util', 'rev': '0.0.76'},
    {'org': 'com.twitter.common', 'name': 'quantity', 'rev': '0.0.66'},
    {'org': 'com.twitter.common', 'name': 'service-thrift', 'rev': '1.0.42'},
    {'org': 'com.twitter.common', 'name': 'stat', 'rev': '0.0.26'},
    {'org': 'com.twitter.common', 'name': 'util', 'rev': '0.0.92'},
    {'org': 'com.twitter.common', 'name': 'util-system-mocks', 'rev': '0.0.67'},
    {'org': 'com.twitter.common.zookeeper', 'name': 'client', 'rev': '0.0.53'},
    {'org': 'com.twitter.common.zookeeper', 'name': 'group', 'rev': '0.0.67'},
    {'org': 'com.twitter.common.zookeeper', 'name': 'server-set', 'rev': '1.0.72'},
    {'org': 'com.twitter', 'name': 'scrooge-core_2.10', 'rev': '3.17.0'},
    {'org': 'com.yammer.metrics', 'name': 'metrics-core', 'rev': '2.2.0'},
    {'org': 'commons-beanutils', 'name': 'commons-beanutils', 'rev': '1.8.3'},
    {'org': 'commons-codec', 'name': 'commons-codec', 'rev': '1.6'},
    {'org': 'commons-pool', 'name': 'commons-pool', 'rev': '1.6'},
    {'org': 'hsqldb', 'name': 'hsqldb', 'rev': '1.8.0.10'},
    {'org': 'javax.servlet', 'name': 'servlet-api', 'rev': '2.5'},
    {'org': 'javax.xml.bind', 'name': 'jaxb-api', 'rev': '2.2.2'},
    {'org': 'org.apache.avro', 'name': 'avro', 'rev': '1.7.4'},
    {'org': 'org.apache.httpcomponents',  'name':'httpcore', 'rev': '4.3.2'},
    {'org': 'org.apache.commons', 'name': 'commons-math3', 'rev': '3.4.1'},
    {'org': 'org.clapper', 'name': 'grizzled-scala_2.10', 'rev': '1.3'},
    {'org': 'org.hamcrest', 'name': 'hamcrest-core', 'rev': '1.2'},
    {'org': 'org.javassist', 'name': 'javassist', 'rev': '3.18.1-GA'},
    {'org': 'org.objenesis', 'name': 'objenesis', 'rev': '1.2'},
    {'org': 'org.parboiled', 'name': 'parboiled-core', 'rev': '1.1.6'},
    {'org': 'org.scalamacros', 'name': 'quasiquotes_2.10', 'rev': '2.0.1'},
    {'org': 'org.scalaz', 'name': 'scalaz-core_2.10', 'rev': '7.1.3'},
    {'org': 'org.scalaz', 'name': 'scalaz-concurrent_2.10', 'rev': '7.1.3'},
    {'org': 'org.scalaz', 'name': 'scalaz-effect_2.10', 'rev': '7.1.3'},
    {'org': 'org.scalaz.stream', 'name': 'scalaz-stream_2.10', 'rev': '0.7.3a'},
    {'org': 'org.scala-lang.modules', 'name': 'scala-async_2.10', 'rev': '0.9.5'},
    {'org': 'org.tukaani', 'name': 'xz', 'rev': '1.0'},
    {'org': 'xerces', 'name': 'xercesImpl', 'rev': '2.8.1'},
    {'org': 'xml-apis', 'name': 'xml-apis', 'rev': '1.3.04'},


    # Make sure we always pin to the correct minor version of scala provided deps.
    {'org': 'org.scala-lang', 'name': 'scala-compiler', 'rev': '2.10.4'},
    {'org': 'org.scala-lang', 'name': 'scala-library', 'rev': '2.10.4'},
    {'org': 'org.scala-lang', 'name': 'scala-reflect', 'rev': '2.10.4'},
    {'org': 'org.scala-lang', 'name': 'scalap', 'rev': '2.10.4'},

    {'org': 'org.apache.velocity', 'name': 'velocity', 'rev': '1.7'},
    {'org': 'com.sun.jersey', 'name': 'jersey-json', 'rev': '1.14'},
    {'org': 'org.codehaus.jackson', 'name': 'jackson-jaxrs', 'rev': '1.9.2'},
    {'org': 'org.apache.hadoop', 'name': 'hadoop-annotations', 'rev': '2.6.0'},
    {'org': 'com.google.protobuf', 'name': 'protobuf-java', 'rev': '2.5.0'},

    {'org': 'org.codehaus.janino', 'name': 'commons-compiler', 'rev': '2.7.8'},

    {'org': 'commons-collections', 'name': 'commons-collections', 'rev': '3.2.1'},
    {'org': 'commons-digester', 'name': 'commons-digester', 'rev': '1.8'},
  ]

# For advanced users, if you are testing new jars built entirely locally, add the jar coordinates to this
# map with the local file location where the override jar lives.
local_override_versions = [
    # Example
    # {'org' :'io.fsq', 'name': 'spindle-runtime_2.10', 'rev' : '3.0.0-M7',  'artifact_path': '/path/to/artifact.jar'}
  ]


[cache.pom-resolve]
write_to: %(local_artifact_caches)s
read_from: %(all_artifact_caches)s
