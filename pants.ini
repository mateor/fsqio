# buildroot, homedir and user are assumed to be seeded in the config

[DEFAULT]
# Look for these rcfiles - they need not exist on the system
rcfiles: ['/etc/pantsrc', '~/.pants.new.rc']

pants_workdir: %(buildroot)s/.pants.d
pants_supportdir: %(buildroot)s/build-support
pants_distdir: %(buildroot)s/dist
info_dir: %(pants_workdir)s/runs
pants_pythons: %(buildroot)s/.python
confs: ['default']
max_subprocess_args: 100

scala_workdir: %(pants_workdir)s/scalac
java_workdir: %(pants_workdir)s/javac
thrift_workdir: %(pants_workdir)s/thrift
protobuf_workdir: %(pants_workdir)s/protobuf

scala_compile_profile: scala-compile-2.9.2

artifact_caches = [ 'http://pantscache' ]

# TODO(benjy): Which of these are really neccessary? We ran SBT with them, but that may be partly in order
# to run a jetty. Do we really need to run the compiler with these?
basic_opts: [
  '-Duser.timezone=UTC',
  '-Dfile.encoding=UTF-8',
  '-Djava.awt.headless=true',
  '-XX:+AggressiveOpts',
  '-XX:+UseCompressedOops',
  '-Xss4096k',
  '-XX:+UseParallelOldGC',
  '-server',
  ]

less_mem_opts: [
  '-Xmx2g',
  '-XX:MaxPermSize=512m'
  ]

more_mem_opts: [
  '-Xmx4g',
  '-XX:MaxPermSize=1g',
  ]

super_mem_opts: [
  '-Xmx5g',
  '-XX:MaxPermSize=1g',
  ]

dev_opts: %(basic_opts)s + [
  '-Dmongo.connectionsPerHost=4',
  '-Dmongo.threadsAllowedToBlockForConnectionMultiplier=10',
  '-noverify',
  '-Dlogback.configurationFile=props/default.logback.xml',
  '-XX:ReservedCodeCacheSize=512m',
  ]

test_opts: %(dev_opts)s + [
  '-Drun.mode=test',
  '-Dmongo.connectionsPerHost=10',
  '-Dmongo.threadsAllowedToBlockForConnectionMultiplier=10',
  '-Dlogback.configurationFile=props/test.default.logback.xml',
  '-Djava.security.manager',
  '-Djava.security.policy=tests.policy',
  '-Dconfig.file=./src/resources/config/test.conf',
  '-Drun.mode=test',
  ]

debug_opts: [
  '-Xverify:none',
  '-Xdebug',
  '-Xnoagent',
  '-Djava.compiler=NONE',
  '-Xrunjdwp:transport=dt_socket,address=4000,server=y,suspend=y',
  ]

zinc_opts: [
  '-Dzinc.compiler.cache.limit=5',
  '-Dzinc.analysis.cache.limit=1000',
  '-Dzinc.resident.cache.limit=0',  # These leak memory. Do not use.
  ]


[goals]
bootstrap_buildfiles: [
    '%(pants_supportdir)s/BUILD.bootstrap',
  ]
logdir: /tmp/%(user)s/goals


[tasks]
build_invalidator: %(pants_workdir)s/build_invalidator


[reporting]
reports_dir: %(pants_workdir)s/reports
reports_assets_dir: %(pants_supportdir)s/reporting/assets
reports_template_dir: %(pants_supportdir)s/reporting/templates
reporting_port: 7268


[nailgun]
workdir: %(pants_workdir)s/ng
supportdir: %(pants_supportdir)s/ng
jar: %(supportdir)s/lib/nailgun-0.7.1.jar
args: %(basic_opts)s + %(super_mem_opts)s + %(zinc_opts)s
autokill: True


[ivy]
supportdir: %(pants_supportdir)s/ivy
classpath: ['%(supportdir)s/lib/ivy-2.2.0.jar']
ivy_settings: %(supportdir)s/ivysettings.xml
cache_dir: %(homedir)s/.ivy2/cache


[ivy-profiles]
workdir: %(pants_supportdir)s/profiles


[ivy-resolve]
workdir: %(pants_workdir)s/classpath
nailgun_dir: %(pants_workdir)s/ng/ivy
profile: xalan
transitive: True
args: []


[thrift-gen]
workdir: %(thrift_workdir)s
supportdir: %(pants_supportdir)s/bin/thrift
strict: False
verbose: False
version: 0.9.0
java: {
    'gen': 'java:hashcode',
    'deps': {
          'service': ['3rdparty:thrift-0.9.0'],
          'structs': ['3rdparty:thrift-0.9.0']
        }
  }
python: {
    'gen': 'py:newstyle',
    'deps': {
          'service': ['3rdparty/python:thrift-0.9'],
          'structs': ['3rdparty/python:thrift-0.9']
        }
  }

[custom-thrift-gen]
templates: %(buildroot)s/src/ssp/codegen/**.ssp
workdir: %(pants_workdir)s/custom_thrift
nailgun_dir: %(pants_workdir)s/ng/codegen
scalate_workdir: %(pants_workdir)s/scalate
verbose: False
profile: codegen
main_class: com.foursquare.recordv2.codegen.ThriftCodegen
args: []
scala_record: {
  'target_language': 'scala',
  'template': '%(buildroot)s/src/ssp/codegen/scala/record.ssp',
  'options': '',
  'deps': [
    '3rdparty:rogue-index',
    '3rdparty:scalaj-collection',
    '3rdparty:thrift',
    '3rdparty:finagle',
    'lib/recordv2/src/jvm/com/foursquare/recordv2',
    'lib/fscommon/src/jvm/fscommon/thrift'
  ]}
js_record: {
  'target_language': 'js',
  'template': '%(buildroot)s/src/ssp/codegen/javascript/record.ssp',
  'options': '',
  'deps': [ '3rdparty:scalaj-collection',
              '3rdparty:thrift',
              '3rdparty:finagle',
              'lib/recordv2/src/jvm/com/foursquare/recordv2',
              'lib/fscommon/src/jvm/fscommon/thrift'
          ]
  }

[soy-gen]
nailgun_dir: %(pants_workdir)s/ng/soy
workdir: %(pants_workdir)s/soy
profile: soy
main_class: com.google.template.soy.SoyInputClassesGenerator
args: []
verbose: False
scala: {
    'package_prefix': 'com.foursquare.soy.gen',
    'deps': [ '3rdparty:closure-templates',
              '3rdparty:scalaj-collection',
              '3rdparty:thrift',
              'lib/recordv2/src/jvm/com/foursquare/recordv2',
              'lib/fscommon/src/jvm/fscommon/thrift' ]
  }

[java-compile]
workdir: %(java_workdir)s

# jmake setup

jmake-profile: jmake

partition_size_hint: 1000

nailgun_dir: %(pants_workdir)s/ng/%(jmake-profile)s

args: [
    '-C-encoding', '-CUTF-8',
    '-C-g',
    '-C-Tcolor',

    # jmake currently fails when running under Java 7, unless Java 6 is set as the source / target
    '-C-source', '-C1.6',
    '-C-target', '-C1.6',

    # Don't warn for thrift and protobuf gen-files
    '-C-Tnowarnprefixes', '-C%(thrift_workdir)s',
    '-C-Tnowarnprefixes', '-C%(protobuf_workdir)s',

    # Suppress the warning for annotations with no processor - we know there are many of these!
    '-C-Tnowarnregex', '-C^warning: No processor claimed any of these annotations: .*'
  ]
warning_args: [
    '-C-Xlint:all', '-C-Xlint:-serial', '-C-Xlint:-path',
    '-C-deprecation',
  ]
no_warning_args: [
    '-C-Xlint:none',
    '-C-nowarn',
  ]

compiler-profile: twitter-compiler


[scala-compile]
workdir: %(scala_workdir)s

compile-profile: %(scala_compile_profile)s
zinc-profile: zinc
scalac-plugins-profile: scalac_plugins

scaladeps: ['3rdparty:scala-library-2.9.2', '3rdparty:i18n-library']

partition_size_hint: 200

nailgun_dir: %(pants_workdir)s/ng/%(compile-profile)s
main: com.typesafe.zinc.Main

jvm_args: %(basic_opts)s + %(more_mem_opts)s + %(zinc_opts)s

args: [
    '-encoding', 'UTF-8',
    '-deprecation',
    '-unchecked',
    '-Xfatal-warnings',
    '-g:vars',
    '-Ydependent-method-types',
  ]
warning_args: [
    '-deprecation',
  ]
no_warning_args: [
    '-nowarn',
  ]

# Arguments for plugins. Args are only applied for active plugins, so it's safe to put
# inactive plugin args here. Type is list of pairs of [plugin name, list-of-args].
scalac-plugin-args: {
    'i18n': ['file=src/resources/translations/api.txt']
  }

# Active plugins. Can be overridden with the --compile-scala-plugins flag.
scalac-plugins: [
    'i18n',
     'lint'
#    'scctPlugin'
  ]


[lesscss-compile]
workdir: %(pants_workdir)s/lesscss

[jvm]
# Get rid of these when we have proper fine-grained resources targets.
parallel_src_paths: True
parallel_test_paths: True
debug_args: %(debug_opts)s


[jvm-run]
jvm_args: %(dev_opts)s + %(more_mem_opts)s


[scala-repl]
profile: scala-repl-2.9.2
jvm_args: %(dev_opts)s + %(more_mem_opts)s + [ '-Dscala.usejavacp=true' ]
main: scala.tools.nsc.MainGenericRunner


[junit-run]
workdir: %(pants_workdir)s/junit
junit_profile: junit
args: %(test_opts)s + %(more_mem_opts)s + ['-Djava.system.class.loader=fscommon.classloader.IndexedURLClassLoader']


[javadoc-gen]
workdir: %(pants_workdir)s/javadoc


[jar-create]
workdir: %(pants_workdir)s/jars


[binary-create]
outdir: %(pants_distdir)s


[args-resource-mapper]:
classdirs: [ '%(java_workdir)s', '%(scala_workdir)s' ]


[bundle-create]
outdir: %(pants_distdir)s


[jar-publish]
workdir: %(pants_workdir)s/publish
repos = {
   'internal': {
     'resolver': 'nexus.prod.foursquare.com-publish',
     'confs': ['default', 'sources'],
     'auth': 'build-support/BUILD.bootstrap:nexus.prod.foursquare.com'
   },
 }
publish_local_confs = ['default', 'sources', 'docs']


[ide]
workdir: %(pants_workdir)s/ide
classes_conf: default
sources_conf: sources
extra_jvm_source_paths = []
extra_jvm_test_paths = ['tests/resources']
python_source_paths: ['src/python']
python_test_paths: ['tests/python']
python_lib_paths: ['3rdparty/python']
scala_compiler_profile: scala-compile-2.8.1


[provides]
workdir: %(pants_workdir)s/provides


[py]
# Temporary, until py stuff moves under goal.
thrift-platmap: {
    ('darwin', 'x86_64'): ['mac', '10.6', '0.9.0', 'thrift'],
    ('linux',  'x86_64'): ['linux', 'x86_64', '0.9.0', 'thrift']
  }


[python-setup]
artifact_cache: %(pants_workdir)s/py_artifact_cache
bootstrap_cache: %(pants_workdir)s/.pip.cache
download_cache: %(pants_workdir)s/.python.download.cache
install_cache: %(pants_workdir)s/.python.install.cache

virtualenv_target: %(bootstrap_cache)s/virtualenv-1.9.1
virtualenv_urls: ['http://asgard:90/4sq-dev/pants/3rdparty/python/virtualenv-1.9.1.tar.gz']
bootstrap_packages: []

platforms: ['macosx-10.4-x86_64', 'linux-x86_64']


[python-repos]
allow_pypi: True
repos: ['http://pypi.python.org/simple',
        'http://asgard:90/4sq-dev/pants/3rdparty/python/index.html']
indices: ['http://pypi.python.org/simple']


[python-thrift]
default-version: 0.7-dev

[prepare-resources]
workdir: %(pants_workdir)s/resources

