#! /usr/bin/env python

# pants


import inspect
import os.path
import sys

# Add <root>/src/python to the import path so we can use standard Foursquare modules.
root_dir = os.path.dirname(inspect.getfile(inspect.currentframe()))
def path(*p): return os.path.join(root_dir, *p)
python_dir = path("src", "python")
sys.path.insert(0, python_dir)

from argparse import ArgumentParser
from foursquare.common.json_config import JsonConfig
from foursquare.toolchain.pants import PantsRunner
from foursquare.toolchain.watcher import WatcherRunner
from foursquare.toolchain.tasks import (CustomClean, Scrub, Wash, SetupGit, SetupGitAliases,
                                        Unmount, RewritePackages, SyncWheels)
import os
import sys
import platform
import datetime


config = JsonConfig(path('.fsconfig.json'))
runner = PantsRunner(root_dir, config, quiet=not config.get('pants.printcmd', False))

runner.add_external_goal(RewritePackages) # c.f.common.foo -> src/jvm/com/foursquare/common/foo
runner.add_external_goal(Wash) # update build tools
runner.add_external_goal(CustomClean) #delegates `clean` via config to clean-all(-async) or ramdisk
runner.add_external_goal(SetupGit) # (re)setup git config (user, email, hooks)
runner.add_external_goal(SetupGitAliases) # (re)setup git aliases
runner.add_external_goal(Unmount) #delegates `clean` via config to clean-all(-async) or ramdisk
runner.add_external_goal(WatcherRunner) # ~compile support
runner.add_external_goal(Scrub) # clean, wash, artifact cache, git clean, etc
runner.add_external_goal(SyncWheels)

parser = ArgumentParser(add_help=False)
runner.setup_arg_parser(parser)
parser.add_argument('goal', nargs='?')

def main():
  upgrade_date = datetime.date(2014, 5, 17)
  mac_ver = platform.mac_ver()[0]
  if mac_ver[0:4] in ('10.7', '10.8'):
    today = datetime.date.today()
    print '*' * 100
    if today > upgrade_date:
      print "You didn't upgrade to mavericks in time.  Your are out of date. Talk to ja and upgrade now."
      print '*' * 100
      sys.exit(1)
    else:
      days_left = (upgrade_date - today).days
      print "You are not on mavericks.  You have {0} days left. Talk to ja an get upgraded!".format(days_left)
      print '*' * 100


  args = args, other_args = parser.parse_known_args()
  args.passthrough = other_args
  ret = runner.run(args.goal, args)
  if '--help' in other_args:
    runner.print_help(args.goal, args)
  exit(ret.result)
if __name__ == '__main__':
  main()
