#! /usr/bin/env python

# pants


import inspect
import os.path
import sys

# Add <root>/src/python to the import path so we can use standard Foursquare modules.
root_dir = os.path.dirname(inspect.getfile(inspect.currentframe()))
def path(*p): return os.path.join(root_dir, *p)
python_dir = path("src", "python")
sys.path.insert(0, python_dir)

from foursquare.common.process import check_output
from foursquare.toolchain.timed_pants import run_and_log_pants

import os
import sys

def get_current_pants_binary(build_root_dir):
    """Check the pants.pex symlink and fail if it's pointing to the wrong version."""
    current_pants_binary = build_root_dir + "/build-support/pants-current.pex"
    if not os.path.isfile(current_pants_binary):
        sys.stderr.write("No pants binary at %s\n" % current_pants_binary)
        sys.exit(1)
    installed_pants = os.readlink(current_pants_binary)
    if os.getenv("PANTS_DEV") == None:
      with open(build_root_dir + "/build-support/pants-current.version") as pants_version_file:
        pants_version = pants_version_file.read().strip()
      git_pants = "pants-%s.pex" % pants_version

      if installed_pants != git_pants:
          print("Wrong version of pants detected! Please run bootstrap.sh")
          print("Ah, what the heck, I'll run it for you ...")
          os.system("./bootstrap.sh")
    return current_pants_binary

def pick_pants_cmd(build_root_dir):
    args = []
    pants_binary = None
    for arg in sys.argv[1:]:
        if arg.startswith("--pants-binary="):
           pants_binary = arg.split("=", 1)[1]
        elif arg.startswith("--pants-version="):
           pants_binary = build_root_dir + "/build-support/pants-%s.pex" % arg.split("=", 1)[1]
        elif arg == '--beta':
           pants_binary = build_root_dir + "/build-support/pants-beta.pex"
        else:
            args.append(arg)  # Pass through to pants.pex.

    if pants_binary is None:
        pants_binary = get_current_pants_binary(build_root_dir)

    return [pants_binary, "goal"] + args

def main():
    build_root_dir = os.path.dirname(__file__)
    cmd = pick_pants_cmd(build_root_dir)
    os.putenv("PYTHONPATH", build_root_dir + u"/src/python")
    exit(run_and_log_pants(cmd))
if __name__ == '__main__':
  main()
